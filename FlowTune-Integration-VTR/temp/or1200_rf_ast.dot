digraph G {	
ranksep=.25;
	0 [label="MODULE"];
	1 [label="IDENTIFIERS: or1200_rf"];
	0 -> 1;
	2 [label="VAR_DECLARE_LIST"];
	0 -> 2;
	3 [label="VAR_DECLARE:  INPUT PORT"];
	2 -> 3;
	4 [label="IDENTIFIERS: clk"];
	3 -> 4;
	5 [label="VAR_DECLARE:  INPUT PORT"];
	2 -> 5;
	6 [label="IDENTIFIERS: rst"];
	5 -> 6;
	7 [label="VAR_DECLARE:  INPUT PORT"];
	2 -> 7;
	8 [label="IDENTIFIERS: supv"];
	7 -> 8;
	9 [label="VAR_DECLARE:  INPUT PORT"];
	2 -> 9;
	10 [label="IDENTIFIERS: wb_freeze"];
	9 -> 10;
	11 [label="VAR_DECLARE:  INPUT PORT"];
	2 -> 11;
	12 [label="IDENTIFIERS: addrw"];
	11 -> 12;
	13 [label="BINARY_OPERATION: MIN"];
	11 -> 13;
	14 [label="NUMBERS: 00000000000000000000000000000101 ()"];
	13 -> 14;
	15 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	13 -> 15;
	16 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	11 -> 16;
	17 [label="VAR_DECLARE:  INPUT PORT"];
	2 -> 17;
	18 [label="IDENTIFIERS: dataw"];
	17 -> 18;
	19 [label="BINARY_OPERATION: MIN"];
	17 -> 19;
	20 [label="NUMBERS: 00000000000000000000000000100000 ()"];
	19 -> 20;
	21 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	19 -> 21;
	22 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	17 -> 22;
	23 [label="VAR_DECLARE:  INPUT PORT"];
	2 -> 23;
	24 [label="IDENTIFIERS: id_freeze"];
	23 -> 24;
	25 [label="VAR_DECLARE:  INPUT PORT"];
	2 -> 25;
	26 [label="IDENTIFIERS: we"];
	25 -> 26;
	27 [label="VAR_DECLARE:  INPUT PORT"];
	2 -> 27;
	28 [label="IDENTIFIERS: flushpipe"];
	27 -> 28;
	29 [label="VAR_DECLARE:  INPUT PORT"];
	2 -> 29;
	30 [label="IDENTIFIERS: addra"];
	29 -> 30;
	31 [label="BINARY_OPERATION: MIN"];
	29 -> 31;
	32 [label="NUMBERS: 00000000000000000000000000000101 ()"];
	31 -> 32;
	33 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	31 -> 33;
	34 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	29 -> 34;
	35 [label="VAR_DECLARE:  INPUT PORT"];
	2 -> 35;
	36 [label="IDENTIFIERS: rda"];
	35 -> 36;
	37 [label="VAR_DECLARE:  OUTPUT PORT"];
	2 -> 37;
	38 [label="IDENTIFIERS: dataa"];
	37 -> 38;
	39 [label="BINARY_OPERATION: MIN"];
	37 -> 39;
	40 [label="NUMBERS: 00000000000000000000000000100000 ()"];
	39 -> 40;
	41 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	39 -> 41;
	42 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	37 -> 42;
	43 [label="VAR_DECLARE:  INPUT PORT"];
	2 -> 43;
	44 [label="IDENTIFIERS: addrb"];
	43 -> 44;
	45 [label="BINARY_OPERATION: MIN"];
	43 -> 45;
	46 [label="NUMBERS: 00000000000000000000000000000101 ()"];
	45 -> 46;
	47 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	45 -> 47;
	48 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	43 -> 48;
	49 [label="VAR_DECLARE:  INPUT PORT"];
	2 -> 49;
	50 [label="IDENTIFIERS: rdb"];
	49 -> 50;
	51 [label="VAR_DECLARE:  OUTPUT PORT"];
	2 -> 51;
	52 [label="IDENTIFIERS: datab"];
	51 -> 52;
	53 [label="BINARY_OPERATION: MIN"];
	51 -> 53;
	54 [label="NUMBERS: 00000000000000000000000000100000 ()"];
	53 -> 54;
	55 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	53 -> 55;
	56 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	51 -> 56;
	57 [label="VAR_DECLARE:  INPUT PORT"];
	2 -> 57;
	58 [label="IDENTIFIERS: spr_cs"];
	57 -> 58;
	59 [label="VAR_DECLARE:  INPUT PORT"];
	2 -> 59;
	60 [label="IDENTIFIERS: spr_write"];
	59 -> 60;
	61 [label="VAR_DECLARE:  INPUT PORT"];
	2 -> 61;
	62 [label="IDENTIFIERS: spr_addr"];
	61 -> 62;
	63 [label="NUMBERS: 00000000000000000000000000011111 ()"];
	61 -> 63;
	64 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	61 -> 64;
	65 [label="VAR_DECLARE:  INPUT PORT"];
	2 -> 65;
	66 [label="IDENTIFIERS: spr_dat_i"];
	65 -> 66;
	67 [label="NUMBERS: 00000000000000000000000000011111 ()"];
	65 -> 67;
	68 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	65 -> 68;
	69 [label="VAR_DECLARE:  OUTPUT PORT"];
	2 -> 69;
	70 [label="IDENTIFIERS: spr_dat_o"];
	69 -> 70;
	71 [label="NUMBERS: 00000000000000000000000000011111 ()"];
	69 -> 71;
	72 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	69 -> 72;
	73 [label="MODULE_ITEMS"];
	0 -> 73;
	74 [label="VAR_DECLARE_LIST"];
	73 -> 74;
	75 [label="VAR_DECLARE:  INPUT PORT"];
	74 -> 75;
	76 [label="IDENTIFIERS: clk"];
	75 -> 76;
	77 [label="VAR_DECLARE_LIST"];
	73 -> 77;
	78 [label="VAR_DECLARE:  INPUT PORT"];
	77 -> 78;
	79 [label="IDENTIFIERS: rst"];
	78 -> 79;
	80 [label="VAR_DECLARE_LIST"];
	73 -> 80;
	81 [label="VAR_DECLARE:  INPUT PORT"];
	80 -> 81;
	82 [label="IDENTIFIERS: supv"];
	81 -> 82;
	83 [label="VAR_DECLARE_LIST"];
	73 -> 83;
	84 [label="VAR_DECLARE:  INPUT PORT"];
	83 -> 84;
	85 [label="IDENTIFIERS: wb_freeze"];
	84 -> 85;
	86 [label="VAR_DECLARE_LIST"];
	73 -> 86;
	87 [label="VAR_DECLARE:  INPUT PORT"];
	86 -> 87;
	88 [label="IDENTIFIERS: addrw"];
	87 -> 88;
	89 [label="BINARY_OPERATION: MIN"];
	87 -> 89;
	90 [label="NUMBERS: 00000000000000000000000000000101 ()"];
	89 -> 90;
	91 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	89 -> 91;
	92 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	87 -> 92;
	93 [label="VAR_DECLARE_LIST"];
	73 -> 93;
	94 [label="VAR_DECLARE:  INPUT PORT"];
	93 -> 94;
	95 [label="IDENTIFIERS: dataw"];
	94 -> 95;
	96 [label="BINARY_OPERATION: MIN"];
	94 -> 96;
	97 [label="NUMBERS: 00000000000000000000000000100000 ()"];
	96 -> 97;
	98 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	96 -> 98;
	99 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	94 -> 99;
	100 [label="VAR_DECLARE_LIST"];
	73 -> 100;
	101 [label="VAR_DECLARE:  INPUT PORT"];
	100 -> 101;
	102 [label="IDENTIFIERS: we"];
	101 -> 102;
	103 [label="VAR_DECLARE_LIST"];
	73 -> 103;
	104 [label="VAR_DECLARE:  INPUT PORT"];
	103 -> 104;
	105 [label="IDENTIFIERS: flushpipe"];
	104 -> 105;
	106 [label="VAR_DECLARE_LIST"];
	73 -> 106;
	107 [label="VAR_DECLARE:  INPUT PORT"];
	106 -> 107;
	108 [label="IDENTIFIERS: id_freeze"];
	107 -> 108;
	109 [label="VAR_DECLARE_LIST"];
	73 -> 109;
	110 [label="VAR_DECLARE:  INPUT PORT"];
	109 -> 110;
	111 [label="IDENTIFIERS: addra"];
	110 -> 111;
	112 [label="BINARY_OPERATION: MIN"];
	110 -> 112;
	113 [label="NUMBERS: 00000000000000000000000000000101 ()"];
	112 -> 113;
	114 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	112 -> 114;
	115 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	110 -> 115;
	116 [label="VAR_DECLARE_LIST"];
	73 -> 116;
	117 [label="VAR_DECLARE:  INPUT PORT"];
	116 -> 117;
	118 [label="IDENTIFIERS: addrb"];
	117 -> 118;
	119 [label="BINARY_OPERATION: MIN"];
	117 -> 119;
	120 [label="NUMBERS: 00000000000000000000000000000101 ()"];
	119 -> 120;
	121 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	119 -> 121;
	122 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	117 -> 122;
	123 [label="VAR_DECLARE_LIST"];
	73 -> 123;
	124 [label="VAR_DECLARE:  OUTPUT PORT"];
	123 -> 124;
	125 [label="IDENTIFIERS: dataa"];
	124 -> 125;
	126 [label="BINARY_OPERATION: MIN"];
	124 -> 126;
	127 [label="NUMBERS: 00000000000000000000000000100000 ()"];
	126 -> 127;
	128 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	126 -> 128;
	129 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	124 -> 129;
	130 [label="VAR_DECLARE_LIST"];
	73 -> 130;
	131 [label="VAR_DECLARE:  OUTPUT PORT"];
	130 -> 131;
	132 [label="IDENTIFIERS: datab"];
	131 -> 132;
	133 [label="BINARY_OPERATION: MIN"];
	131 -> 133;
	134 [label="NUMBERS: 00000000000000000000000000100000 ()"];
	133 -> 134;
	135 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	133 -> 135;
	136 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	131 -> 136;
	137 [label="VAR_DECLARE_LIST"];
	73 -> 137;
	138 [label="VAR_DECLARE:  INPUT PORT"];
	137 -> 138;
	139 [label="IDENTIFIERS: rda"];
	138 -> 139;
	140 [label="VAR_DECLARE_LIST"];
	73 -> 140;
	141 [label="VAR_DECLARE:  INPUT PORT"];
	140 -> 141;
	142 [label="IDENTIFIERS: rdb"];
	141 -> 142;
	143 [label="VAR_DECLARE_LIST"];
	73 -> 143;
	144 [label="VAR_DECLARE:  INPUT PORT"];
	143 -> 144;
	145 [label="IDENTIFIERS: spr_cs"];
	144 -> 145;
	146 [label="VAR_DECLARE_LIST"];
	73 -> 146;
	147 [label="VAR_DECLARE:  INPUT PORT"];
	146 -> 147;
	148 [label="IDENTIFIERS: spr_write"];
	147 -> 148;
	149 [label="VAR_DECLARE_LIST"];
	73 -> 149;
	150 [label="VAR_DECLARE:  INPUT PORT"];
	149 -> 150;
	151 [label="IDENTIFIERS: spr_addr"];
	150 -> 151;
	152 [label="NUMBERS: 00000000000000000000000000011111 ()"];
	150 -> 152;
	153 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	150 -> 153;
	154 [label="VAR_DECLARE_LIST"];
	73 -> 154;
	155 [label="VAR_DECLARE:  INPUT PORT"];
	154 -> 155;
	156 [label="IDENTIFIERS: spr_dat_i"];
	155 -> 156;
	157 [label="NUMBERS: 00000000000000000000000000011111 ()"];
	155 -> 157;
	158 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	155 -> 158;
	159 [label="VAR_DECLARE_LIST"];
	73 -> 159;
	160 [label="VAR_DECLARE:  OUTPUT PORT"];
	159 -> 160;
	161 [label="IDENTIFIERS: spr_dat_o"];
	160 -> 161;
	162 [label="NUMBERS: 00000000000000000000000000011111 ()"];
	160 -> 162;
	163 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	160 -> 163;
	164 [label="VAR_DECLARE_LIST"];
	73 -> 164;
	165 [label="VAR_DECLARE:  WIRE"];
	164 -> 165;
	166 [label="IDENTIFIERS: from_rfa"];
	165 -> 166;
	167 [label="BINARY_OPERATION: MIN"];
	165 -> 167;
	168 [label="NUMBERS: 00000000000000000000000000100000 ()"];
	167 -> 168;
	169 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	167 -> 169;
	170 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	165 -> 170;
	171 [label="VAR_DECLARE_LIST"];
	73 -> 171;
	172 [label="VAR_DECLARE:  WIRE"];
	171 -> 172;
	173 [label="IDENTIFIERS: from_rfb"];
	172 -> 173;
	174 [label="BINARY_OPERATION: MIN"];
	172 -> 174;
	175 [label="NUMBERS: 00000000000000000000000000100000 ()"];
	174 -> 175;
	176 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	174 -> 176;
	177 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	172 -> 177;
	178 [label="VAR_DECLARE_LIST"];
	73 -> 178;
	179 [label="VAR_DECLARE:  REG"];
	178 -> 179;
	180 [label="IDENTIFIERS: dataa_saved"];
	179 -> 180;
	181 [label="NUMBERS: 00000000000000000000000000100000 ()"];
	179 -> 181;
	182 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	179 -> 182;
	183 [label="VAR_DECLARE_LIST"];
	73 -> 183;
	184 [label="VAR_DECLARE:  REG"];
	183 -> 184;
	185 [label="IDENTIFIERS: datab_saved"];
	184 -> 185;
	186 [label="NUMBERS: 00000000000000000000000000100000 ()"];
	184 -> 186;
	187 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	184 -> 187;
	188 [label="VAR_DECLARE_LIST"];
	73 -> 188;
	189 [label="VAR_DECLARE:  WIRE"];
	188 -> 189;
	190 [label="IDENTIFIERS: rf_addra"];
	189 -> 190;
	191 [label="BINARY_OPERATION: MIN"];
	189 -> 191;
	192 [label="NUMBERS: 00000000000000000000000000000101 ()"];
	191 -> 192;
	193 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	191 -> 193;
	194 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	189 -> 194;
	195 [label="VAR_DECLARE_LIST"];
	73 -> 195;
	196 [label="VAR_DECLARE:  WIRE"];
	195 -> 196;
	197 [label="IDENTIFIERS: rf_addrw"];
	196 -> 197;
	198 [label="BINARY_OPERATION: MIN"];
	196 -> 198;
	199 [label="NUMBERS: 00000000000000000000000000000101 ()"];
	198 -> 199;
	200 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	198 -> 200;
	201 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	196 -> 201;
	202 [label="VAR_DECLARE_LIST"];
	73 -> 202;
	203 [label="VAR_DECLARE:  WIRE"];
	202 -> 203;
	204 [label="IDENTIFIERS: rf_dataw"];
	203 -> 204;
	205 [label="BINARY_OPERATION: MIN"];
	203 -> 205;
	206 [label="NUMBERS: 00000000000000000000000000100000 ()"];
	205 -> 206;
	207 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	205 -> 207;
	208 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	203 -> 208;
	209 [label="VAR_DECLARE_LIST"];
	73 -> 209;
	210 [label="VAR_DECLARE:  WIRE"];
	209 -> 210;
	211 [label="IDENTIFIERS: rf_we"];
	210 -> 211;
	212 [label="VAR_DECLARE_LIST"];
	73 -> 212;
	213 [label="VAR_DECLARE:  WIRE"];
	212 -> 213;
	214 [label="IDENTIFIERS: spr_valid"];
	213 -> 214;
	215 [label="VAR_DECLARE_LIST"];
	73 -> 215;
	216 [label="VAR_DECLARE:  WIRE"];
	215 -> 216;
	217 [label="IDENTIFIERS: rf_ena"];
	216 -> 217;
	218 [label="VAR_DECLARE_LIST"];
	73 -> 218;
	219 [label="VAR_DECLARE:  WIRE"];
	218 -> 219;
	220 [label="IDENTIFIERS: rf_enb"];
	219 -> 220;
	221 [label="VAR_DECLARE_LIST"];
	73 -> 221;
	222 [label="VAR_DECLARE:  REG"];
	221 -> 222;
	223 [label="IDENTIFIERS: rf_we_allow"];
	222 -> 223;
	224 [label="ASSIGN"];
	73 -> 224;
	225 [label="BLOCKING_STATEMENT"];
	224 -> 225;
	226 [label="IDENTIFIERS: spr_valid"];
	225 -> 226;
	227 [label="BINARY_OPERATION: bAND"];
	225 -> 227;
	228 [label="IDENTIFIERS: spr_cs"];
	227 -> 228;
	229 [label="BINARY_OPERATION: lEQ"];
	227 -> 229;
	230 [label="RANGE_REF"];
	229 -> 230;
	231 [label="IDENTIFIERS: spr_addr"];
	230 -> 231;
	232 [label="NUMBERS: 00000000000000000000000000001010 ()"];
	230 -> 232;
	233 [label="NUMBERS: 00000000000000000000000000000101 ()"];
	230 -> 233;
	234 [label="NUMBERS: 100000 ( )"];
	229 -> 234;
	235 [label="ASSIGN"];
	73 -> 235;
	236 [label="BLOCKING_STATEMENT"];
	235 -> 236;
	237 [label="IDENTIFIERS: spr_dat_o"];
	236 -> 237;
	238 [label="IDENTIFIERS: from_rfa"];
	236 -> 238;
	239 [label="ASSIGN"];
	73 -> 239;
	240 [label="BLOCKING_STATEMENT"];
	239 -> 240;
	241 [label="IDENTIFIERS: dataa"];
	240 -> 241;
	242 [label="IF_Q"];
	240 -> 242;
	243 [label="ARRAY_REF"];
	242 -> 243;
	244 [label="IDENTIFIERS: dataa_saved"];
	243 -> 244;
	245 [label="NUMBERS: 00000000000000000000000000100000 ()"];
	243 -> 245;
	246 [label="RANGE_REF"];
	242 -> 246;
	247 [label="IDENTIFIERS: dataa_saved"];
	246 -> 247;
	248 [label="NUMBERS: 00000000000000000000000000011111 ()"];
	246 -> 248;
	249 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	246 -> 249;
	250 [label="IDENTIFIERS: from_rfa"];
	242 -> 250;
	251 [label="ASSIGN"];
	73 -> 251;
	252 [label="BLOCKING_STATEMENT"];
	251 -> 252;
	253 [label="IDENTIFIERS: datab"];
	252 -> 253;
	254 [label="IF_Q"];
	252 -> 254;
	255 [label="ARRAY_REF"];
	254 -> 255;
	256 [label="IDENTIFIERS: datab_saved"];
	255 -> 256;
	257 [label="NUMBERS: 00000000000000000000000000100000 ()"];
	255 -> 257;
	258 [label="RANGE_REF"];
	254 -> 258;
	259 [label="IDENTIFIERS: datab_saved"];
	258 -> 259;
	260 [label="NUMBERS: 00000000000000000000000000011111 ()"];
	258 -> 260;
	261 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	258 -> 261;
	262 [label="IDENTIFIERS: from_rfb"];
	254 -> 262;
	263 [label="ASSIGN"];
	73 -> 263;
	264 [label="BLOCKING_STATEMENT"];
	263 -> 264;
	265 [label="IDENTIFIERS: rf_addra"];
	264 -> 265;
	266 [label="IF_Q"];
	264 -> 266;
	267 [label="BINARY_OPERATION: bAND"];
	266 -> 267;
	268 [label="IDENTIFIERS: spr_valid"];
	267 -> 268;
	269 [label="UNARY_OPERATION: lNOT"];
	267 -> 269;
	270 [label="IDENTIFIERS: spr_write"];
	269 -> 270;
	271 [label="RANGE_REF"];
	266 -> 271;
	272 [label="IDENTIFIERS: spr_addr"];
	271 -> 272;
	273 [label="NUMBERS: 00000000000000000000000000000100 ()"];
	271 -> 273;
	274 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	271 -> 274;
	275 [label="IDENTIFIERS: addra"];
	266 -> 275;
	276 [label="ASSIGN"];
	73 -> 276;
	277 [label="BLOCKING_STATEMENT"];
	276 -> 277;
	278 [label="IDENTIFIERS: rf_addrw"];
	277 -> 278;
	279 [label="IF_Q"];
	277 -> 279;
	280 [label="BINARY_OPERATION: bAND"];
	279 -> 280;
	281 [label="IDENTIFIERS: spr_valid"];
	280 -> 281;
	282 [label="IDENTIFIERS: spr_write"];
	280 -> 282;
	283 [label="RANGE_REF"];
	279 -> 283;
	284 [label="IDENTIFIERS: spr_addr"];
	283 -> 284;
	285 [label="NUMBERS: 00000000000000000000000000000100 ()"];
	283 -> 285;
	286 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	283 -> 286;
	287 [label="IDENTIFIERS: addrw"];
	279 -> 287;
	288 [label="ASSIGN"];
	73 -> 288;
	289 [label="BLOCKING_STATEMENT"];
	288 -> 289;
	290 [label="IDENTIFIERS: rf_dataw"];
	289 -> 290;
	291 [label="IF_Q"];
	289 -> 291;
	292 [label="BINARY_OPERATION: bAND"];
	291 -> 292;
	293 [label="IDENTIFIERS: spr_valid"];
	292 -> 293;
	294 [label="IDENTIFIERS: spr_write"];
	292 -> 294;
	295 [label="IDENTIFIERS: spr_dat_i"];
	291 -> 295;
	296 [label="IDENTIFIERS: dataw"];
	291 -> 296;
	297 [label="ALWAYS"];
	73 -> 297;
	298 [label="DELAY_CONTROL"];
	297 -> 298;
	299 [label="POSEDGE"];
	298 -> 299;
	300 [label="IDENTIFIERS: clk"];
	299 -> 300;
	301 [label="IF"];
	297 -> 301;
	302 [label="IDENTIFIERS: rst"];
	301 -> 302;
	303 [label="NON_BLOCKING_STATEMENT"];
	301 -> 303;
	304 [label="IDENTIFIERS: rf_we_allow"];
	303 -> 304;
	305 [label="NUMBERS: 1 ()"];
	303 -> 305;
	306 [label="IF"];
	301 -> 306;
	307 [label="UNARY_OPERATION: bNOT"];
	306 -> 307;
	308 [label="IDENTIFIERS: wb_freeze"];
	307 -> 308;
	309 [label="NON_BLOCKING_STATEMENT"];
	306 -> 309;
	310 [label="IDENTIFIERS: rf_we_allow"];
	309 -> 310;
	311 [label="UNARY_OPERATION: bNOT"];
	309 -> 311;
	312 [label="IDENTIFIERS: flushpipe"];
	311 -> 312;
	313 [label="ASSIGN"];
	73 -> 313;
	314 [label="BLOCKING_STATEMENT"];
	313 -> 314;
	315 [label="IDENTIFIERS: rf_we"];
	314 -> 315;
	316 [label="BINARY_OPERATION: bAND"];
	314 -> 316;
	317 [label="BINARY_OPERATION: bAND"];
	316 -> 317;
	318 [label="BINARY_OPERATION: bOR"];
	317 -> 318;
	319 [label="BINARY_OPERATION: bAND"];
	318 -> 319;
	320 [label="IDENTIFIERS: spr_valid"];
	319 -> 320;
	321 [label="IDENTIFIERS: spr_write"];
	319 -> 321;
	322 [label="BINARY_OPERATION: bAND"];
	318 -> 322;
	323 [label="IDENTIFIERS: we"];
	322 -> 323;
	324 [label="UNARY_OPERATION: bNOT"];
	322 -> 324;
	325 [label="IDENTIFIERS: wb_freeze"];
	324 -> 325;
	326 [label="IDENTIFIERS: rf_we_allow"];
	317 -> 326;
	327 [label="BINARY_OPERATION: bOR"];
	316 -> 327;
	328 [label="IDENTIFIERS: supv"];
	327 -> 328;
	329 [label="UNARY_OPERATION: bOR"];
	327 -> 329;
	330 [label="IDENTIFIERS: rf_addrw"];
	329 -> 330;
	331 [label="ASSIGN"];
	73 -> 331;
	332 [label="BLOCKING_STATEMENT"];
	331 -> 332;
	333 [label="IDENTIFIERS: rf_ena"];
	332 -> 333;
	334 [label="BINARY_OPERATION: bOR"];
	332 -> 334;
	335 [label="BINARY_OPERATION: bAND"];
	334 -> 335;
	336 [label="IDENTIFIERS: rda"];
	335 -> 336;
	337 [label="UNARY_OPERATION: bNOT"];
	335 -> 337;
	338 [label="IDENTIFIERS: id_freeze"];
	337 -> 338;
	339 [label="IDENTIFIERS: spr_valid"];
	334 -> 339;
	340 [label="ASSIGN"];
	73 -> 340;
	341 [label="BLOCKING_STATEMENT"];
	340 -> 341;
	342 [label="IDENTIFIERS: rf_enb"];
	341 -> 342;
	343 [label="BINARY_OPERATION: bOR"];
	341 -> 343;
	344 [label="BINARY_OPERATION: bAND"];
	343 -> 344;
	345 [label="IDENTIFIERS: rdb"];
	344 -> 345;
	346 [label="UNARY_OPERATION: bNOT"];
	344 -> 346;
	347 [label="IDENTIFIERS: id_freeze"];
	346 -> 347;
	348 [label="IDENTIFIERS: spr_valid"];
	343 -> 348;
	349 [label="ALWAYS"];
	73 -> 349;
	350 [label="DELAY_CONTROL"];
	349 -> 350;
	351 [label="POSEDGE"];
	350 -> 351;
	352 [label="IDENTIFIERS: clk"];
	351 -> 352;
	353 [label="IF"];
	349 -> 353;
	354 [label="IDENTIFIERS: rst"];
	353 -> 354;
	355 [label="BLOCK"];
	353 -> 355;
	356 [label="NON_BLOCKING_STATEMENT"];
	355 -> 356;
	357 [label="IDENTIFIERS: dataa_saved"];
	356 -> 357;
	358 [label="NUMBERS: 000000000000000000000000000000000 ()"];
	356 -> 358;
	359 [label="IF"];
	353 -> 359;
	360 [label="BINARY_OPERATION: bAND"];
	359 -> 360;
	361 [label="IDENTIFIERS: id_freeze"];
	360 -> 361;
	362 [label="UNARY_OPERATION: lNOT"];
	360 -> 362;
	363 [label="ARRAY_REF"];
	362 -> 363;
	364 [label="IDENTIFIERS: dataa_saved"];
	363 -> 364;
	365 [label="NUMBERS: 00000000000000000000000000100000 ()"];
	363 -> 365;
	366 [label="BLOCK"];
	359 -> 366;
	367 [label="NON_BLOCKING_STATEMENT"];
	366 -> 367;
	368 [label="IDENTIFIERS: dataa_saved"];
	367 -> 368;
	369 [label="CONCATENATE"];
	367 -> 369;
	370 [label="NUMBERS: 1 ()"];
	369 -> 370;
	371 [label="IDENTIFIERS: from_rfa"];
	369 -> 371;
	372 [label="IF"];
	359 -> 372;
	373 [label="UNARY_OPERATION: lNOT"];
	372 -> 373;
	374 [label="IDENTIFIERS: id_freeze"];
	373 -> 374;
	375 [label="NON_BLOCKING_STATEMENT"];
	372 -> 375;
	376 [label="IDENTIFIERS: dataa_saved"];
	375 -> 376;
	377 [label="NUMBERS: 000000000000000000000000000000000 ()"];
	375 -> 377;
	378 [label="ALWAYS"];
	73 -> 378;
	379 [label="DELAY_CONTROL"];
	378 -> 379;
	380 [label="POSEDGE"];
	379 -> 380;
	381 [label="IDENTIFIERS: clk"];
	380 -> 381;
	382 [label="IF"];
	378 -> 382;
	383 [label="IDENTIFIERS: rst"];
	382 -> 383;
	384 [label="BLOCK"];
	382 -> 384;
	385 [label="NON_BLOCKING_STATEMENT"];
	384 -> 385;
	386 [label="IDENTIFIERS: datab_saved"];
	385 -> 386;
	387 [label="NUMBERS: 000000000000000000000000000000000 ()"];
	385 -> 387;
	388 [label="IF"];
	382 -> 388;
	389 [label="BINARY_OPERATION: bAND"];
	388 -> 389;
	390 [label="IDENTIFIERS: id_freeze"];
	389 -> 390;
	391 [label="UNARY_OPERATION: lNOT"];
	389 -> 391;
	392 [label="ARRAY_REF"];
	391 -> 392;
	393 [label="IDENTIFIERS: datab_saved"];
	392 -> 393;
	394 [label="NUMBERS: 00000000000000000000000000100000 ()"];
	392 -> 394;
	395 [label="BLOCK"];
	388 -> 395;
	396 [label="NON_BLOCKING_STATEMENT"];
	395 -> 396;
	397 [label="IDENTIFIERS: datab_saved"];
	396 -> 397;
	398 [label="CONCATENATE"];
	396 -> 398;
	399 [label="NUMBERS: 1 ()"];
	398 -> 399;
	400 [label="IDENTIFIERS: from_rfb"];
	398 -> 400;
	401 [label="IF"];
	388 -> 401;
	402 [label="UNARY_OPERATION: lNOT"];
	401 -> 402;
	403 [label="IDENTIFIERS: id_freeze"];
	402 -> 403;
	404 [label="NON_BLOCKING_STATEMENT"];
	401 -> 404;
	405 [label="IDENTIFIERS: datab_saved"];
	404 -> 405;
	406 [label="NUMBERS: 000000000000000000000000000000000 ()"];
	404 -> 406;
	407 [label="VAR_DECLARE_LIST"];
	73 -> 407;
	408 [label="VAR_DECLARE:  WIRE"];
	407 -> 408;
	409 [label="IDENTIFIERS: const_one"];
	408 -> 409;
	410 [label="VAR_DECLARE_LIST"];
	73 -> 410;
	411 [label="VAR_DECLARE:  WIRE"];
	410 -> 411;
	412 [label="IDENTIFIERS: const_zero"];
	411 -> 412;
	413 [label="ASSIGN"];
	73 -> 413;
	414 [label="BLOCKING_STATEMENT"];
	413 -> 414;
	415 [label="IDENTIFIERS: const_one"];
	414 -> 415;
	416 [label="NUMBERS: 1 ()"];
	414 -> 416;
	417 [label="ASSIGN"];
	73 -> 417;
	418 [label="BLOCKING_STATEMENT"];
	417 -> 418;
	419 [label="IDENTIFIERS: const_zero"];
	418 -> 419;
	420 [label="NUMBERS: 0 ()"];
	418 -> 420;
	421 [label="VAR_DECLARE_LIST"];
	73 -> 421;
	422 [label="VAR_DECLARE:  WIRE"];
	421 -> 422;
	423 [label="IDENTIFIERS: const_zero_data"];
	422 -> 423;
	424 [label="NUMBERS: 00000000000000000000000000011111 ()"];
	422 -> 424;
	425 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	422 -> 425;
	426 [label="ASSIGN"];
	73 -> 426;
	427 [label="BLOCKING_STATEMENT"];
	426 -> 427;
	428 [label="IDENTIFIERS: const_zero_data"];
	427 -> 428;
	429 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	427 -> 429;
	430 [label="VAR_DECLARE_LIST"];
	73 -> 430;
	431 [label="VAR_DECLARE:  WIRE"];
	430 -> 431;
	432 [label="IDENTIFIERS: dont_care_out"];
	431 -> 432;
	433 [label="NUMBERS: 00000000000000000000000000011111 ()"];
	431 -> 433;
	434 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	431 -> 434;
	435 [label="VAR_DECLARE_LIST"];
	73 -> 435;
	436 [label="VAR_DECLARE:  WIRE"];
	435 -> 436;
	437 [label="IDENTIFIERS: dont_care_out2"];
	436 -> 437;
	438 [label="NUMBERS: 00000000000000000000000000011111 ()"];
	436 -> 438;
	439 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	436 -> 439;
	440 [label="MODULE_INSTANCE"];
	73 -> 440;
	441 [label="MODULE_INSTANCE"];
	440 -> 441;
	442 [label="IDENTIFIERS: dual_port_ram"];
	441 -> 442;
	443 [label="MODULE_NAMED_INSTANCE"];
	441 -> 443;
	444 [label="IDENTIFIERS: rf_a"];
	443 -> 444;
	445 [label="MODULE_CONNECT_LIST"];
	443 -> 445;
	446 [label="MODULE_CONNECT"];
	445 -> 446;
	447 [label="IDENTIFIERS: clk"];
	446 -> 447;
	448 [label="IDENTIFIERS: clk"];
	446 -> 448;
	449 [label="MODULE_CONNECT"];
	445 -> 449;
	450 [label="IDENTIFIERS: we1"];
	449 -> 450;
	451 [label="IDENTIFIERS: const_zero"];
	449 -> 451;
	452 [label="MODULE_CONNECT"];
	445 -> 452;
	453 [label="IDENTIFIERS: we2"];
	452 -> 453;
	454 [label="IDENTIFIERS: rf_we"];
	452 -> 454;
	455 [label="MODULE_CONNECT"];
	445 -> 455;
	456 [label="IDENTIFIERS: data1"];
	455 -> 456;
	457 [label="IDENTIFIERS: const_zero_data"];
	455 -> 457;
	458 [label="MODULE_CONNECT"];
	445 -> 458;
	459 [label="IDENTIFIERS: data2"];
	458 -> 459;
	460 [label="IDENTIFIERS: rf_dataw"];
	458 -> 460;
	461 [label="MODULE_CONNECT"];
	445 -> 461;
	462 [label="IDENTIFIERS: out1"];
	461 -> 462;
	463 [label="IDENTIFIERS: from_rfa"];
	461 -> 463;
	464 [label="MODULE_CONNECT"];
	445 -> 464;
	465 [label="IDENTIFIERS: out2"];
	464 -> 465;
	466 [label="IDENTIFIERS: dont_care_out"];
	464 -> 466;
	467 [label="MODULE_CONNECT"];
	445 -> 467;
	468 [label="IDENTIFIERS: addr1"];
	467 -> 468;
	469 [label="IDENTIFIERS: rf_addra"];
	467 -> 469;
	470 [label="MODULE_CONNECT"];
	445 -> 470;
	471 [label="IDENTIFIERS: addr2"];
	470 -> 471;
	472 [label="IDENTIFIERS: rf_addrw"];
	470 -> 472;
	473 [label="MODULE_INSTANCE"];
	73 -> 473;
	474 [label="MODULE_INSTANCE"];
	473 -> 474;
	475 [label="IDENTIFIERS: dual_port_ram"];
	474 -> 475;
	476 [label="MODULE_NAMED_INSTANCE"];
	474 -> 476;
	477 [label="IDENTIFIERS: rf_b"];
	476 -> 477;
	478 [label="MODULE_CONNECT_LIST"];
	476 -> 478;
	479 [label="MODULE_CONNECT"];
	478 -> 479;
	480 [label="IDENTIFIERS: clk"];
	479 -> 480;
	481 [label="IDENTIFIERS: clk"];
	479 -> 481;
	482 [label="MODULE_CONNECT"];
	478 -> 482;
	483 [label="IDENTIFIERS: we1"];
	482 -> 483;
	484 [label="IDENTIFIERS: const_zero"];
	482 -> 484;
	485 [label="MODULE_CONNECT"];
	478 -> 485;
	486 [label="IDENTIFIERS: we2"];
	485 -> 486;
	487 [label="IDENTIFIERS: rf_we"];
	485 -> 487;
	488 [label="MODULE_CONNECT"];
	478 -> 488;
	489 [label="IDENTIFIERS: data1"];
	488 -> 489;
	490 [label="IDENTIFIERS: const_zero_data"];
	488 -> 490;
	491 [label="MODULE_CONNECT"];
	478 -> 491;
	492 [label="IDENTIFIERS: data2"];
	491 -> 492;
	493 [label="IDENTIFIERS: rf_dataw"];
	491 -> 493;
	494 [label="MODULE_CONNECT"];
	478 -> 494;
	495 [label="IDENTIFIERS: out1"];
	494 -> 495;
	496 [label="IDENTIFIERS: from_rfb"];
	494 -> 496;
	497 [label="MODULE_CONNECT"];
	478 -> 497;
	498 [label="IDENTIFIERS: out2"];
	497 -> 498;
	499 [label="IDENTIFIERS: dont_care_out2"];
	497 -> 499;
	500 [label="MODULE_CONNECT"];
	478 -> 500;
	501 [label="IDENTIFIERS: addr1"];
	500 -> 501;
	502 [label="IDENTIFIERS: addrb"];
	500 -> 502;
	503 [label="MODULE_CONNECT"];
	478 -> 503;
	504 [label="IDENTIFIERS: addr2"];
	503 -> 504;
	505 [label="IDENTIFIERS: rf_addrw"];
	503 -> 505;
	506 [label="VAR_DECLARE_LIST"];
	73 -> 506;
	507 [label="VAR_DECLARE:  WIRE"];
	506 -> 507;
	508 [label="IDENTIFIERS: unused"];
	507 -> 508;
	509 [label="ASSIGN"];
	73 -> 509;
	510 [label="BLOCKING_STATEMENT"];
	509 -> 510;
	511 [label="IDENTIFIERS: unused"];
	510 -> 511;
	512 [label="UNARY_OPERATION: bOR"];
	510 -> 512;
	513 [label="IDENTIFIERS: spr_addr"];
	512 -> 513;
}

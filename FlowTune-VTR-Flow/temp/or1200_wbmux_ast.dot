digraph G {	
ranksep=.25;
	0 [label="MODULE"];
	1 [label="IDENTIFIERS: or1200_wbmux"];
	0 -> 1;
	2 [label="VAR_DECLARE_LIST"];
	0 -> 2;
	3 [label="VAR_DECLARE:  INPUT PORT"];
	2 -> 3;
	4 [label="IDENTIFIERS: clk"];
	3 -> 4;
	5 [label="VAR_DECLARE:  INPUT PORT"];
	2 -> 5;
	6 [label="IDENTIFIERS: rst"];
	5 -> 6;
	7 [label="VAR_DECLARE:  INPUT PORT"];
	2 -> 7;
	8 [label="IDENTIFIERS: wb_freeze"];
	7 -> 8;
	9 [label="VAR_DECLARE:  INPUT PORT"];
	2 -> 9;
	10 [label="IDENTIFIERS: rfwb_op"];
	9 -> 10;
	11 [label="BINARY_OPERATION: MIN"];
	9 -> 11;
	12 [label="NUMBERS: 00000000000000000000000000000011 ()"];
	11 -> 12;
	13 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	11 -> 13;
	14 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	9 -> 14;
	15 [label="VAR_DECLARE:  INPUT PORT"];
	2 -> 15;
	16 [label="IDENTIFIERS: muxin_a"];
	15 -> 16;
	17 [label="BINARY_OPERATION: MIN"];
	15 -> 17;
	18 [label="NUMBERS: 00000000000000000000000000100000 ()"];
	17 -> 18;
	19 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	17 -> 19;
	20 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	15 -> 20;
	21 [label="VAR_DECLARE:  INPUT PORT"];
	2 -> 21;
	22 [label="IDENTIFIERS: muxin_b"];
	21 -> 22;
	23 [label="BINARY_OPERATION: MIN"];
	21 -> 23;
	24 [label="NUMBERS: 00000000000000000000000000100000 ()"];
	23 -> 24;
	25 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	23 -> 25;
	26 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	21 -> 26;
	27 [label="VAR_DECLARE:  INPUT PORT"];
	2 -> 27;
	28 [label="IDENTIFIERS: muxin_c"];
	27 -> 28;
	29 [label="BINARY_OPERATION: MIN"];
	27 -> 29;
	30 [label="NUMBERS: 00000000000000000000000000100000 ()"];
	29 -> 30;
	31 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	29 -> 31;
	32 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	27 -> 32;
	33 [label="VAR_DECLARE:  INPUT PORT"];
	2 -> 33;
	34 [label="IDENTIFIERS: muxin_d"];
	33 -> 34;
	35 [label="BINARY_OPERATION: MIN"];
	33 -> 35;
	36 [label="NUMBERS: 00000000000000000000000000100000 ()"];
	35 -> 36;
	37 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	35 -> 37;
	38 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	33 -> 38;
	39 [label="VAR_DECLARE:  OUTPUT PORT"];
	2 -> 39;
	40 [label="IDENTIFIERS: muxout"];
	39 -> 40;
	41 [label="BINARY_OPERATION: MIN"];
	39 -> 41;
	42 [label="NUMBERS: 00000000000000000000000000100000 ()"];
	41 -> 42;
	43 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	41 -> 43;
	44 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	39 -> 44;
	45 [label="VAR_DECLARE:  OUTPUT PORT"];
	2 -> 45;
	46 [label="IDENTIFIERS: muxreg"];
	45 -> 46;
	47 [label="BINARY_OPERATION: MIN"];
	45 -> 47;
	48 [label="NUMBERS: 00000000000000000000000000100000 ()"];
	47 -> 48;
	49 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	47 -> 49;
	50 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	45 -> 50;
	51 [label="VAR_DECLARE:  OUTPUT PORT"];
	2 -> 51;
	52 [label="IDENTIFIERS: muxreg_valid"];
	51 -> 52;
	53 [label="MODULE_ITEMS"];
	0 -> 53;
	54 [label="VAR_DECLARE_LIST"];
	53 -> 54;
	55 [label="VAR_DECLARE:  INPUT PORT"];
	54 -> 55;
	56 [label="IDENTIFIERS: clk"];
	55 -> 56;
	57 [label="VAR_DECLARE_LIST"];
	53 -> 57;
	58 [label="VAR_DECLARE:  INPUT PORT"];
	57 -> 58;
	59 [label="IDENTIFIERS: rst"];
	58 -> 59;
	60 [label="VAR_DECLARE_LIST"];
	53 -> 60;
	61 [label="VAR_DECLARE:  INPUT PORT"];
	60 -> 61;
	62 [label="IDENTIFIERS: wb_freeze"];
	61 -> 62;
	63 [label="VAR_DECLARE_LIST"];
	53 -> 63;
	64 [label="VAR_DECLARE:  INPUT PORT"];
	63 -> 64;
	65 [label="IDENTIFIERS: rfwb_op"];
	64 -> 65;
	66 [label="BINARY_OPERATION: MIN"];
	64 -> 66;
	67 [label="NUMBERS: 00000000000000000000000000000011 ()"];
	66 -> 67;
	68 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	66 -> 68;
	69 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	64 -> 69;
	70 [label="VAR_DECLARE_LIST"];
	53 -> 70;
	71 [label="VAR_DECLARE:  INPUT PORT"];
	70 -> 71;
	72 [label="IDENTIFIERS: muxin_a"];
	71 -> 72;
	73 [label="BINARY_OPERATION: MIN"];
	71 -> 73;
	74 [label="NUMBERS: 00000000000000000000000000100000 ()"];
	73 -> 74;
	75 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	73 -> 75;
	76 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	71 -> 76;
	77 [label="VAR_DECLARE_LIST"];
	53 -> 77;
	78 [label="VAR_DECLARE:  INPUT PORT"];
	77 -> 78;
	79 [label="IDENTIFIERS: muxin_b"];
	78 -> 79;
	80 [label="BINARY_OPERATION: MIN"];
	78 -> 80;
	81 [label="NUMBERS: 00000000000000000000000000100000 ()"];
	80 -> 81;
	82 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	80 -> 82;
	83 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	78 -> 83;
	84 [label="VAR_DECLARE_LIST"];
	53 -> 84;
	85 [label="VAR_DECLARE:  INPUT PORT"];
	84 -> 85;
	86 [label="IDENTIFIERS: muxin_c"];
	85 -> 86;
	87 [label="BINARY_OPERATION: MIN"];
	85 -> 87;
	88 [label="NUMBERS: 00000000000000000000000000100000 ()"];
	87 -> 88;
	89 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	87 -> 89;
	90 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	85 -> 90;
	91 [label="VAR_DECLARE_LIST"];
	53 -> 91;
	92 [label="VAR_DECLARE:  INPUT PORT"];
	91 -> 92;
	93 [label="IDENTIFIERS: muxin_d"];
	92 -> 93;
	94 [label="BINARY_OPERATION: MIN"];
	92 -> 94;
	95 [label="NUMBERS: 00000000000000000000000000100000 ()"];
	94 -> 95;
	96 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	94 -> 96;
	97 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	92 -> 97;
	98 [label="VAR_DECLARE_LIST"];
	53 -> 98;
	99 [label="VAR_DECLARE:  OUTPUT PORT"];
	98 -> 99;
	100 [label="IDENTIFIERS: muxout"];
	99 -> 100;
	101 [label="BINARY_OPERATION: MIN"];
	99 -> 101;
	102 [label="NUMBERS: 00000000000000000000000000100000 ()"];
	101 -> 102;
	103 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	101 -> 103;
	104 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	99 -> 104;
	105 [label="VAR_DECLARE_LIST"];
	53 -> 105;
	106 [label="VAR_DECLARE:  OUTPUT PORT"];
	105 -> 106;
	107 [label="IDENTIFIERS: muxreg"];
	106 -> 107;
	108 [label="BINARY_OPERATION: MIN"];
	106 -> 108;
	109 [label="NUMBERS: 00000000000000000000000000100000 ()"];
	108 -> 109;
	110 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	108 -> 110;
	111 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	106 -> 111;
	112 [label="VAR_DECLARE_LIST"];
	53 -> 112;
	113 [label="VAR_DECLARE:  OUTPUT PORT"];
	112 -> 113;
	114 [label="IDENTIFIERS: muxreg_valid"];
	113 -> 114;
	115 [label="VAR_DECLARE_LIST"];
	53 -> 115;
	116 [label="VAR_DECLARE:  REG"];
	115 -> 116;
	117 [label="IDENTIFIERS: muxout"];
	116 -> 117;
	118 [label="BINARY_OPERATION: MIN"];
	116 -> 118;
	119 [label="NUMBERS: 00000000000000000000000000100000 ()"];
	118 -> 119;
	120 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	118 -> 120;
	121 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	116 -> 121;
	122 [label="VAR_DECLARE_LIST"];
	53 -> 122;
	123 [label="VAR_DECLARE:  REG"];
	122 -> 123;
	124 [label="IDENTIFIERS: muxreg"];
	123 -> 124;
	125 [label="BINARY_OPERATION: MIN"];
	123 -> 125;
	126 [label="NUMBERS: 00000000000000000000000000100000 ()"];
	125 -> 126;
	127 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	125 -> 127;
	128 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	123 -> 128;
	129 [label="VAR_DECLARE_LIST"];
	53 -> 129;
	130 [label="VAR_DECLARE:  REG"];
	129 -> 130;
	131 [label="IDENTIFIERS: muxreg_valid"];
	130 -> 131;
	132 [label="ALWAYS"];
	53 -> 132;
	133 [label="DELAY_CONTROL"];
	132 -> 133;
	134 [label="POSEDGE"];
	133 -> 134;
	135 [label="IDENTIFIERS: clk"];
	134 -> 135;
	136 [label="BLOCK"];
	132 -> 136;
	137 [label="IF"];
	136 -> 137;
	138 [label="IDENTIFIERS: rst"];
	137 -> 138;
	139 [label="BLOCK"];
	137 -> 139;
	140 [label="NON_BLOCKING_STATEMENT"];
	139 -> 140;
	141 [label="IDENTIFIERS: muxreg"];
	140 -> 141;
	142 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	140 -> 142;
	143 [label="NON_BLOCKING_STATEMENT"];
	139 -> 143;
	144 [label="IDENTIFIERS: muxreg_valid"];
	143 -> 144;
	145 [label="NUMBERS: 0 ()"];
	143 -> 145;
	146 [label="IF"];
	137 -> 146;
	147 [label="UNARY_OPERATION: lNOT"];
	146 -> 147;
	148 [label="IDENTIFIERS: wb_freeze"];
	147 -> 148;
	149 [label="BLOCK"];
	146 -> 149;
	150 [label="NON_BLOCKING_STATEMENT"];
	149 -> 150;
	151 [label="IDENTIFIERS: muxreg"];
	150 -> 151;
	152 [label="IDENTIFIERS: muxout"];
	150 -> 152;
	153 [label="NON_BLOCKING_STATEMENT"];
	149 -> 153;
	154 [label="IDENTIFIERS: muxreg_valid"];
	153 -> 154;
	155 [label="ARRAY_REF"];
	153 -> 155;
	156 [label="IDENTIFIERS: rfwb_op"];
	155 -> 156;
	157 [label="NUMBERS: 00000000000000000000000000000000 ()"];
	155 -> 157;
	158 [label="ALWAYS"];
	53 -> 158;
	159 [label="DELAY_CONTROL"];
	158 -> 159;
	160 [label="IDENTIFIERS: muxin_a"];
	159 -> 160;
	161 [label="IDENTIFIERS: muxin_b"];
	159 -> 161;
	162 [label="IDENTIFIERS: muxin_c"];
	159 -> 162;
	163 [label="IDENTIFIERS: muxin_d"];
	159 -> 163;
	164 [label="IDENTIFIERS: rfwb_op"];
	159 -> 164;
	165 [label="BLOCK"];
	158 -> 165;
	166 [label="CASE"];
	165 -> 166;
	167 [label="RANGE_REF"];
	166 -> 167;
	168 [label="IDENTIFIERS: rfwb_op"];
	167 -> 168;
	169 [label="BINARY_OPERATION: MIN"];
	167 -> 169;
	170 [label="NUMBERS: 00000000000000000000000000000011 ()"];
	169 -> 170;
	171 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	169 -> 171;
	172 [label="NUMBERS: 00000000000000000000000000000001 ()"];
	167 -> 172;
	173 [label="CASE_LIST"];
	166 -> 173;
	174 [label="CASE_ITEM"];
	173 -> 174;
	175 [label="NUMBERS: 00 ()"];
	174 -> 175;
	176 [label="BLOCKING_STATEMENT"];
	174 -> 176;
	177 [label="IDENTIFIERS: muxout"];
	176 -> 177;
	178 [label="IDENTIFIERS: muxin_a"];
	176 -> 178;
	179 [label="CASE_ITEM"];
	173 -> 179;
	180 [label="NUMBERS: 01 ()"];
	179 -> 180;
	181 [label="BLOCK"];
	179 -> 181;
	182 [label="BLOCKING_STATEMENT"];
	181 -> 182;
	183 [label="IDENTIFIERS: muxout"];
	182 -> 183;
	184 [label="IDENTIFIERS: muxin_b"];
	182 -> 184;
	185 [label="CASE_ITEM"];
	173 -> 185;
	186 [label="NUMBERS: 10 ()"];
	185 -> 186;
	187 [label="BLOCK"];
	185 -> 187;
	188 [label="BLOCKING_STATEMENT"];
	187 -> 188;
	189 [label="IDENTIFIERS: muxout"];
	188 -> 189;
	190 [label="IDENTIFIERS: muxin_c"];
	188 -> 190;
	191 [label="CASE_ITEM"];
	173 -> 191;
	192 [label="NUMBERS: 11 ()"];
	191 -> 192;
	193 [label="BLOCK"];
	191 -> 193;
	194 [label="BLOCKING_STATEMENT"];
	193 -> 194;
	195 [label="IDENTIFIERS: muxout"];
	194 -> 195;
	196 [label="BINARY_OPERATION: ADD"];
	194 -> 196;
	197 [label="IDENTIFIERS: muxin_d"];
	196 -> 197;
	198 [label="NUMBERS: 00000000000000000000000000001000 ()"];
	196 -> 198;
}
